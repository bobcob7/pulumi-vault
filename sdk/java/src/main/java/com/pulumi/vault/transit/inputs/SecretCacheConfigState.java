// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.transit.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretCacheConfigState extends com.pulumi.resources.ResourceArgs {

    public static final SecretCacheConfigState Empty = new SecretCacheConfigState();

    /**
     * The path the transit secret backend is mounted at, with no leading or trailing `/`s.
     * 
     */
    @Import(name="backend")
    private @Nullable Output<String> backend;

    /**
     * @return The path the transit secret backend is mounted at, with no leading or trailing `/`s.
     * 
     */
    public Optional<Output<String>> backend() {
        return Optional.ofNullable(this.backend);
    }

    /**
     * The number of cache entries. 0 means unlimited.
     * 
     */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @return The number of cache entries. 0 means unlimited.
     * 
     */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    private SecretCacheConfigState() {}

    private SecretCacheConfigState(SecretCacheConfigState $) {
        this.backend = $.backend;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretCacheConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretCacheConfigState $;

        public Builder() {
            $ = new SecretCacheConfigState();
        }

        public Builder(SecretCacheConfigState defaults) {
            $ = new SecretCacheConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The path the transit secret backend is mounted at, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(@Nullable Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The path the transit secret backend is mounted at, with no leading or trailing `/`s.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param size The number of cache entries. 0 means unlimited.
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The number of cache entries. 0 means unlimited.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public SecretCacheConfigState build() {
            return $;
        }
    }

}
