// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./secretBackendCert";
export * from "./secretBackendConfigCa";
export * from "./secretBackendConfigUrls";
export * from "./secretBackendCrlConfig";
export * from "./secretBackendIntermediateCertRequest";
export * from "./secretBackendIntermediateSetSigned";
export * from "./secretBackendRole";
export * from "./secretBackendRootCert";
export * from "./secretBackendRootSignIntermediate";
export * from "./secretBackendSign";

// Import resources to register:
import { SecretBackendCert } from "./secretBackendCert";
import { SecretBackendConfigCa } from "./secretBackendConfigCa";
import { SecretBackendConfigUrls } from "./secretBackendConfigUrls";
import { SecretBackendCrlConfig } from "./secretBackendCrlConfig";
import { SecretBackendIntermediateCertRequest } from "./secretBackendIntermediateCertRequest";
import { SecretBackendIntermediateSetSigned } from "./secretBackendIntermediateSetSigned";
import { SecretBackendRole } from "./secretBackendRole";
import { SecretBackendRootCert } from "./secretBackendRootCert";
import { SecretBackendRootSignIntermediate } from "./secretBackendRootSignIntermediate";
import { SecretBackendSign } from "./secretBackendSign";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "vault:pkiSecret/secretBackendCert:SecretBackendCert":
                return new SecretBackendCert(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendConfigCa:SecretBackendConfigCa":
                return new SecretBackendConfigCa(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendConfigUrls:SecretBackendConfigUrls":
                return new SecretBackendConfigUrls(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendCrlConfig:SecretBackendCrlConfig":
                return new SecretBackendCrlConfig(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendIntermediateCertRequest:SecretBackendIntermediateCertRequest":
                return new SecretBackendIntermediateCertRequest(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendIntermediateSetSigned:SecretBackendIntermediateSetSigned":
                return new SecretBackendIntermediateSetSigned(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendRole:SecretBackendRole":
                return new SecretBackendRole(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendRootCert:SecretBackendRootCert":
                return new SecretBackendRootCert(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendRootSignIntermediate:SecretBackendRootSignIntermediate":
                return new SecretBackendRootSignIntermediate(name, <any>undefined, { urn })
            case "vault:pkiSecret/secretBackendSign:SecretBackendSign":
                return new SecretBackendSign(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendCert", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendConfigCa", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendConfigUrls", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendCrlConfig", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendIntermediateCertRequest", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendIntermediateSetSigned", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendRole", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendRootCert", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendRootSignIntermediate", _module)
pulumi.runtime.registerResourceModule("vault", "pkiSecret/secretBackendSign", _module)
