// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupAliasState extends com.pulumi.resources.ResourceArgs {

    public static final GroupAliasState Empty = new GroupAliasState();

    /**
     * ID of the group to which this is an alias.
     * 
     */
    @Import(name="canonicalId")
    private @Nullable Output<String> canonicalId;

    /**
     * @return ID of the group to which this is an alias.
     * 
     */
    public Optional<Output<String>> canonicalId() {
        return Optional.ofNullable(this.canonicalId);
    }

    /**
     * Mount accessor of the authentication backend to which this alias belongs to.
     * 
     */
    @Import(name="mountAccessor")
    private @Nullable Output<String> mountAccessor;

    /**
     * @return Mount accessor of the authentication backend to which this alias belongs to.
     * 
     */
    public Optional<Output<String>> mountAccessor() {
        return Optional.ofNullable(this.mountAccessor);
    }

    /**
     * Name of the group alias to create.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the group alias to create.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GroupAliasState() {}

    private GroupAliasState(GroupAliasState $) {
        this.canonicalId = $.canonicalId;
        this.mountAccessor = $.mountAccessor;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupAliasState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupAliasState $;

        public Builder() {
            $ = new GroupAliasState();
        }

        public Builder(GroupAliasState defaults) {
            $ = new GroupAliasState(Objects.requireNonNull(defaults));
        }

        /**
         * @param canonicalId ID of the group to which this is an alias.
         * 
         * @return builder
         * 
         */
        public Builder canonicalId(@Nullable Output<String> canonicalId) {
            $.canonicalId = canonicalId;
            return this;
        }

        /**
         * @param canonicalId ID of the group to which this is an alias.
         * 
         * @return builder
         * 
         */
        public Builder canonicalId(String canonicalId) {
            return canonicalId(Output.of(canonicalId));
        }

        /**
         * @param mountAccessor Mount accessor of the authentication backend to which this alias belongs to.
         * 
         * @return builder
         * 
         */
        public Builder mountAccessor(@Nullable Output<String> mountAccessor) {
            $.mountAccessor = mountAccessor;
            return this;
        }

        /**
         * @param mountAccessor Mount accessor of the authentication backend to which this alias belongs to.
         * 
         * @return builder
         * 
         */
        public Builder mountAccessor(String mountAccessor) {
            return mountAccessor(Output.of(mountAccessor));
        }

        /**
         * @param name Name of the group alias to create.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the group alias to create.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GroupAliasState build() {
            return $;
        }
    }

}
