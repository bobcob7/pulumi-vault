// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGroupResult {
    /**
     * @return Canonical ID of the Alias
     * 
     */
    private final String aliasCanonicalId;
    /**
     * @return Creation time of the Alias
     * 
     */
    private final String aliasCreationTime;
    private final String aliasId;
    /**
     * @return Last update time of the alias
     * 
     */
    private final String aliasLastUpdateTime;
    /**
     * @return List of canonical IDs merged with this alias
     * 
     */
    private final List<String> aliasMergedFromCanonicalIds;
    /**
     * @return Arbitrary metadata
     * 
     */
    private final Map<String,Object> aliasMetadata;
    private final String aliasMountAccessor;
    /**
     * @return Authentication mount path which this alias belongs to
     * 
     */
    private final String aliasMountPath;
    /**
     * @return Authentication mount type which this alias belongs to
     * 
     */
    private final String aliasMountType;
    private final String aliasName;
    /**
     * @return Creation timestamp of the group
     * 
     */
    private final String creationTime;
    /**
     * @return A string containing the full data payload retrieved from
     * Vault, serialized in JSON format.
     * 
     */
    private final String dataJson;
    private final String groupId;
    private final String groupName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Last updated time of the group
     * 
     */
    private final String lastUpdateTime;
    /**
     * @return List of Entity IDs which are members of this group
     * 
     */
    private final List<String> memberEntityIds;
    /**
     * @return List of Group IDs which are members of this group
     * 
     */
    private final List<String> memberGroupIds;
    /**
     * @return Arbitrary metadata
     * 
     */
    private final Map<String,Object> metadata;
    /**
     * @return Modify index of the group
     * 
     */
    private final Integer modifyIndex;
    /**
     * @return Namespace of which the group is part of
     * 
     */
    private final String namespaceId;
    /**
     * @return List of Group IDs which are parents of this group.
     * 
     */
    private final List<String> parentGroupIds;
    /**
     * @return List of policies attached to the group
     * 
     */
    private final List<String> policies;
    /**
     * @return Type of group
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetGroupResult(
        @CustomType.Parameter("aliasCanonicalId") String aliasCanonicalId,
        @CustomType.Parameter("aliasCreationTime") String aliasCreationTime,
        @CustomType.Parameter("aliasId") String aliasId,
        @CustomType.Parameter("aliasLastUpdateTime") String aliasLastUpdateTime,
        @CustomType.Parameter("aliasMergedFromCanonicalIds") List<String> aliasMergedFromCanonicalIds,
        @CustomType.Parameter("aliasMetadata") Map<String,Object> aliasMetadata,
        @CustomType.Parameter("aliasMountAccessor") String aliasMountAccessor,
        @CustomType.Parameter("aliasMountPath") String aliasMountPath,
        @CustomType.Parameter("aliasMountType") String aliasMountType,
        @CustomType.Parameter("aliasName") String aliasName,
        @CustomType.Parameter("creationTime") String creationTime,
        @CustomType.Parameter("dataJson") String dataJson,
        @CustomType.Parameter("groupId") String groupId,
        @CustomType.Parameter("groupName") String groupName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastUpdateTime") String lastUpdateTime,
        @CustomType.Parameter("memberEntityIds") List<String> memberEntityIds,
        @CustomType.Parameter("memberGroupIds") List<String> memberGroupIds,
        @CustomType.Parameter("metadata") Map<String,Object> metadata,
        @CustomType.Parameter("modifyIndex") Integer modifyIndex,
        @CustomType.Parameter("namespaceId") String namespaceId,
        @CustomType.Parameter("parentGroupIds") List<String> parentGroupIds,
        @CustomType.Parameter("policies") List<String> policies,
        @CustomType.Parameter("type") String type) {
        this.aliasCanonicalId = aliasCanonicalId;
        this.aliasCreationTime = aliasCreationTime;
        this.aliasId = aliasId;
        this.aliasLastUpdateTime = aliasLastUpdateTime;
        this.aliasMergedFromCanonicalIds = aliasMergedFromCanonicalIds;
        this.aliasMetadata = aliasMetadata;
        this.aliasMountAccessor = aliasMountAccessor;
        this.aliasMountPath = aliasMountPath;
        this.aliasMountType = aliasMountType;
        this.aliasName = aliasName;
        this.creationTime = creationTime;
        this.dataJson = dataJson;
        this.groupId = groupId;
        this.groupName = groupName;
        this.id = id;
        this.lastUpdateTime = lastUpdateTime;
        this.memberEntityIds = memberEntityIds;
        this.memberGroupIds = memberGroupIds;
        this.metadata = metadata;
        this.modifyIndex = modifyIndex;
        this.namespaceId = namespaceId;
        this.parentGroupIds = parentGroupIds;
        this.policies = policies;
        this.type = type;
    }

    /**
     * @return Canonical ID of the Alias
     * 
     */
    public String aliasCanonicalId() {
        return this.aliasCanonicalId;
    }
    /**
     * @return Creation time of the Alias
     * 
     */
    public String aliasCreationTime() {
        return this.aliasCreationTime;
    }
    public String aliasId() {
        return this.aliasId;
    }
    /**
     * @return Last update time of the alias
     * 
     */
    public String aliasLastUpdateTime() {
        return this.aliasLastUpdateTime;
    }
    /**
     * @return List of canonical IDs merged with this alias
     * 
     */
    public List<String> aliasMergedFromCanonicalIds() {
        return this.aliasMergedFromCanonicalIds;
    }
    /**
     * @return Arbitrary metadata
     * 
     */
    public Map<String,Object> aliasMetadata() {
        return this.aliasMetadata;
    }
    public String aliasMountAccessor() {
        return this.aliasMountAccessor;
    }
    /**
     * @return Authentication mount path which this alias belongs to
     * 
     */
    public String aliasMountPath() {
        return this.aliasMountPath;
    }
    /**
     * @return Authentication mount type which this alias belongs to
     * 
     */
    public String aliasMountType() {
        return this.aliasMountType;
    }
    public String aliasName() {
        return this.aliasName;
    }
    /**
     * @return Creation timestamp of the group
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return A string containing the full data payload retrieved from
     * Vault, serialized in JSON format.
     * 
     */
    public String dataJson() {
        return this.dataJson;
    }
    public String groupId() {
        return this.groupId;
    }
    public String groupName() {
        return this.groupName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Last updated time of the group
     * 
     */
    public String lastUpdateTime() {
        return this.lastUpdateTime;
    }
    /**
     * @return List of Entity IDs which are members of this group
     * 
     */
    public List<String> memberEntityIds() {
        return this.memberEntityIds;
    }
    /**
     * @return List of Group IDs which are members of this group
     * 
     */
    public List<String> memberGroupIds() {
        return this.memberGroupIds;
    }
    /**
     * @return Arbitrary metadata
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata;
    }
    /**
     * @return Modify index of the group
     * 
     */
    public Integer modifyIndex() {
        return this.modifyIndex;
    }
    /**
     * @return Namespace of which the group is part of
     * 
     */
    public String namespaceId() {
        return this.namespaceId;
    }
    /**
     * @return List of Group IDs which are parents of this group.
     * 
     */
    public List<String> parentGroupIds() {
        return this.parentGroupIds;
    }
    /**
     * @return List of policies attached to the group
     * 
     */
    public List<String> policies() {
        return this.policies;
    }
    /**
     * @return Type of group
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String aliasCanonicalId;
        private String aliasCreationTime;
        private String aliasId;
        private String aliasLastUpdateTime;
        private List<String> aliasMergedFromCanonicalIds;
        private Map<String,Object> aliasMetadata;
        private String aliasMountAccessor;
        private String aliasMountPath;
        private String aliasMountType;
        private String aliasName;
        private String creationTime;
        private String dataJson;
        private String groupId;
        private String groupName;
        private String id;
        private String lastUpdateTime;
        private List<String> memberEntityIds;
        private List<String> memberGroupIds;
        private Map<String,Object> metadata;
        private Integer modifyIndex;
        private String namespaceId;
        private List<String> parentGroupIds;
        private List<String> policies;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliasCanonicalId = defaults.aliasCanonicalId;
    	      this.aliasCreationTime = defaults.aliasCreationTime;
    	      this.aliasId = defaults.aliasId;
    	      this.aliasLastUpdateTime = defaults.aliasLastUpdateTime;
    	      this.aliasMergedFromCanonicalIds = defaults.aliasMergedFromCanonicalIds;
    	      this.aliasMetadata = defaults.aliasMetadata;
    	      this.aliasMountAccessor = defaults.aliasMountAccessor;
    	      this.aliasMountPath = defaults.aliasMountPath;
    	      this.aliasMountType = defaults.aliasMountType;
    	      this.aliasName = defaults.aliasName;
    	      this.creationTime = defaults.creationTime;
    	      this.dataJson = defaults.dataJson;
    	      this.groupId = defaults.groupId;
    	      this.groupName = defaults.groupName;
    	      this.id = defaults.id;
    	      this.lastUpdateTime = defaults.lastUpdateTime;
    	      this.memberEntityIds = defaults.memberEntityIds;
    	      this.memberGroupIds = defaults.memberGroupIds;
    	      this.metadata = defaults.metadata;
    	      this.modifyIndex = defaults.modifyIndex;
    	      this.namespaceId = defaults.namespaceId;
    	      this.parentGroupIds = defaults.parentGroupIds;
    	      this.policies = defaults.policies;
    	      this.type = defaults.type;
        }

        public Builder aliasCanonicalId(String aliasCanonicalId) {
            this.aliasCanonicalId = Objects.requireNonNull(aliasCanonicalId);
            return this;
        }
        public Builder aliasCreationTime(String aliasCreationTime) {
            this.aliasCreationTime = Objects.requireNonNull(aliasCreationTime);
            return this;
        }
        public Builder aliasId(String aliasId) {
            this.aliasId = Objects.requireNonNull(aliasId);
            return this;
        }
        public Builder aliasLastUpdateTime(String aliasLastUpdateTime) {
            this.aliasLastUpdateTime = Objects.requireNonNull(aliasLastUpdateTime);
            return this;
        }
        public Builder aliasMergedFromCanonicalIds(List<String> aliasMergedFromCanonicalIds) {
            this.aliasMergedFromCanonicalIds = Objects.requireNonNull(aliasMergedFromCanonicalIds);
            return this;
        }
        public Builder aliasMergedFromCanonicalIds(String... aliasMergedFromCanonicalIds) {
            return aliasMergedFromCanonicalIds(List.of(aliasMergedFromCanonicalIds));
        }
        public Builder aliasMetadata(Map<String,Object> aliasMetadata) {
            this.aliasMetadata = Objects.requireNonNull(aliasMetadata);
            return this;
        }
        public Builder aliasMountAccessor(String aliasMountAccessor) {
            this.aliasMountAccessor = Objects.requireNonNull(aliasMountAccessor);
            return this;
        }
        public Builder aliasMountPath(String aliasMountPath) {
            this.aliasMountPath = Objects.requireNonNull(aliasMountPath);
            return this;
        }
        public Builder aliasMountType(String aliasMountType) {
            this.aliasMountType = Objects.requireNonNull(aliasMountType);
            return this;
        }
        public Builder aliasName(String aliasName) {
            this.aliasName = Objects.requireNonNull(aliasName);
            return this;
        }
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        public Builder dataJson(String dataJson) {
            this.dataJson = Objects.requireNonNull(dataJson);
            return this;
        }
        public Builder groupId(String groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        public Builder groupName(String groupName) {
            this.groupName = Objects.requireNonNull(groupName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastUpdateTime(String lastUpdateTime) {
            this.lastUpdateTime = Objects.requireNonNull(lastUpdateTime);
            return this;
        }
        public Builder memberEntityIds(List<String> memberEntityIds) {
            this.memberEntityIds = Objects.requireNonNull(memberEntityIds);
            return this;
        }
        public Builder memberEntityIds(String... memberEntityIds) {
            return memberEntityIds(List.of(memberEntityIds));
        }
        public Builder memberGroupIds(List<String> memberGroupIds) {
            this.memberGroupIds = Objects.requireNonNull(memberGroupIds);
            return this;
        }
        public Builder memberGroupIds(String... memberGroupIds) {
            return memberGroupIds(List.of(memberGroupIds));
        }
        public Builder metadata(Map<String,Object> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder modifyIndex(Integer modifyIndex) {
            this.modifyIndex = Objects.requireNonNull(modifyIndex);
            return this;
        }
        public Builder namespaceId(String namespaceId) {
            this.namespaceId = Objects.requireNonNull(namespaceId);
            return this;
        }
        public Builder parentGroupIds(List<String> parentGroupIds) {
            this.parentGroupIds = Objects.requireNonNull(parentGroupIds);
            return this;
        }
        public Builder parentGroupIds(String... parentGroupIds) {
            return parentGroupIds(List.of(parentGroupIds));
        }
        public Builder policies(List<String> policies) {
            this.policies = Objects.requireNonNull(policies);
            return this;
        }
        public Builder policies(String... policies) {
            return policies(List.of(policies));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetGroupResult build() {
            return new GetGroupResult(aliasCanonicalId, aliasCreationTime, aliasId, aliasLastUpdateTime, aliasMergedFromCanonicalIds, aliasMetadata, aliasMountAccessor, aliasMountPath, aliasMountType, aliasName, creationTime, dataJson, groupId, groupName, id, lastUpdateTime, memberEntityIds, memberGroupIds, metadata, modifyIndex, namespaceId, parentGroupIds, policies, type);
        }
    }
}
