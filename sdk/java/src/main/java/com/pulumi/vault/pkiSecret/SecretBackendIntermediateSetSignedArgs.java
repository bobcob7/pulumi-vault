// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SecretBackendIntermediateSetSignedArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretBackendIntermediateSetSignedArgs Empty = new SecretBackendIntermediateSetSignedArgs();

    /**
     * The PKI secret backend the resource belongs to.
     * 
     */
    @Import(name="backend", required=true)
    private Output<String> backend;

    /**
     * @return The PKI secret backend the resource belongs to.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }

    /**
     * Specifies the PEM encoded certificate. May optionally append additional
     * CA certificates to populate the whole chain, which will then enable returning the full chain from
     * issue and sign operations.
     * 
     */
    @Import(name="certificate", required=true)
    private Output<String> certificate;

    /**
     * @return Specifies the PEM encoded certificate. May optionally append additional
     * CA certificates to populate the whole chain, which will then enable returning the full chain from
     * issue and sign operations.
     * 
     */
    public Output<String> certificate() {
        return this.certificate;
    }

    private SecretBackendIntermediateSetSignedArgs() {}

    private SecretBackendIntermediateSetSignedArgs(SecretBackendIntermediateSetSignedArgs $) {
        this.backend = $.backend;
        this.certificate = $.certificate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretBackendIntermediateSetSignedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretBackendIntermediateSetSignedArgs $;

        public Builder() {
            $ = new SecretBackendIntermediateSetSignedArgs();
        }

        public Builder(SecretBackendIntermediateSetSignedArgs defaults) {
            $ = new SecretBackendIntermediateSetSignedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The PKI secret backend the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder backend(Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The PKI secret backend the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param certificate Specifies the PEM encoded certificate. May optionally append additional
         * CA certificates to populate the whole chain, which will then enable returning the full chain from
         * issue and sign operations.
         * 
         * @return builder
         * 
         */
        public Builder certificate(Output<String> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate Specifies the PEM encoded certificate. May optionally append additional
         * CA certificates to populate the whole chain, which will then enable returning the full chain from
         * issue and sign operations.
         * 
         * @return builder
         * 
         */
        public Builder certificate(String certificate) {
            return certificate(Output.of(certificate));
        }

        public SecretBackendIntermediateSetSignedArgs build() {
            $.backend = Objects.requireNonNull($.backend, "expected parameter 'backend' to be non-null");
            $.certificate = Objects.requireNonNull($.certificate, "expected parameter 'certificate' to be non-null");
            return $;
        }
    }

}
