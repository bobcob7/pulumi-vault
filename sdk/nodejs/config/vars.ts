// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

let __config = new pulumi.Config("vault");

/**
 * URL of the root of the target Vault server.
 */
export let address: string | undefined = __config.get("address");
/**
 * Login to vault with an existing auth method using auth/<mount>/login
 */
export let authLogins: { namespace?: string, parameters?: {[key: string]: string}, path: string }[] | undefined = __config.getObject<{ namespace?: string, parameters?: {[key: string]: string}, path: string }[]>("authLogins");
/**
 * Path to directory containing CA certificate files to validate the server's certificate.
 */
export let caCertDir: string | undefined = __config.get("caCertDir");
/**
 * Path to a CA certificate file to validate the server's certificate.
 */
export let caCertFile: string | undefined = __config.get("caCertFile");
/**
 * Client authentication credentials.
 */
export let clientAuths: { certFile: string, keyFile: string }[] | undefined = __config.getObject<{ certFile: string, keyFile: string }[]>("clientAuths");
/**
 * Maximum TTL for secret leases requested by this provider
 */
export let maxLeaseTtlSeconds: number | undefined = __config.getObject<number>("maxLeaseTtlSeconds");
/**
 * Maximum number of retries when a 5xx error code is encountered.
 */
export let maxRetries: number | undefined = __config.getObject<number>("maxRetries");
/**
 * The namespace to use. Available only for Vault Enterprise
 */
export let namespace: string | undefined = __config.get("namespace");
/**
 * Set this to true only if the target Vault server is an insecure development instance.
 */
export let skipTlsVerify: boolean | undefined = __config.getObject<boolean>("skipTlsVerify");
/**
 * Token to use to authenticate to Vault.
 */
export let token: string | undefined = __config.get("token");
