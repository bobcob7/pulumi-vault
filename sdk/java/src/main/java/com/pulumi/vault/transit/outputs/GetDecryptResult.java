// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.transit.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDecryptResult {
    private final String backend;
    private final String ciphertext;
    private final @Nullable String context;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String key;
    /**
     * @return Decrypted plaintext returned from Vault
     * 
     */
    private final String plaintext;

    @CustomType.Constructor
    private GetDecryptResult(
        @CustomType.Parameter("backend") String backend,
        @CustomType.Parameter("ciphertext") String ciphertext,
        @CustomType.Parameter("context") @Nullable String context,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("plaintext") String plaintext) {
        this.backend = backend;
        this.ciphertext = ciphertext;
        this.context = context;
        this.id = id;
        this.key = key;
        this.plaintext = plaintext;
    }

    public String backend() {
        return this.backend;
    }
    public String ciphertext() {
        return this.ciphertext;
    }
    public Optional<String> context() {
        return Optional.ofNullable(this.context);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String key() {
        return this.key;
    }
    /**
     * @return Decrypted plaintext returned from Vault
     * 
     */
    public String plaintext() {
        return this.plaintext;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDecryptResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String backend;
        private String ciphertext;
        private @Nullable String context;
        private String id;
        private String key;
        private String plaintext;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDecryptResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backend = defaults.backend;
    	      this.ciphertext = defaults.ciphertext;
    	      this.context = defaults.context;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.plaintext = defaults.plaintext;
        }

        public Builder backend(String backend) {
            this.backend = Objects.requireNonNull(backend);
            return this;
        }
        public Builder ciphertext(String ciphertext) {
            this.ciphertext = Objects.requireNonNull(ciphertext);
            return this;
        }
        public Builder context(@Nullable String context) {
            this.context = context;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder plaintext(String plaintext) {
            this.plaintext = Objects.requireNonNull(plaintext);
            return this;
        }        public GetDecryptResult build() {
            return new GetDecryptResult(backend, ciphertext, context, id, key, plaintext);
        }
    }
}
