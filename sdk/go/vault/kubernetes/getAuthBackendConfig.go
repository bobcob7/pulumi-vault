// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Reads the Role of an Kubernetes from a Vault server. See the [Vault
// documentation](https://www.vaultproject.io/api/auth/kubernetes/index.html#read-config) for more
// information.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-vault/blob/master/website/docs/d/kubernetes_auth_backend_config.html.markdown.
func LookupAuthBackendConfig(ctx *pulumi.Context, args *GetAuthBackendConfigArgs) (*GetAuthBackendConfigResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["backend"] = args.Backend
		inputs["kubernetesCaCert"] = args.KubernetesCaCert
		inputs["kubernetesHost"] = args.KubernetesHost
		inputs["pemKeys"] = args.PemKeys
	}
	outputs, err := ctx.Invoke("vault:kubernetes/getAuthBackendConfig:getAuthBackendConfig", inputs)
	if err != nil {
		return nil, err
	}
	return &GetAuthBackendConfigResult{
		Backend: outputs["backend"],
		KubernetesCaCert: outputs["kubernetesCaCert"],
		KubernetesHost: outputs["kubernetesHost"],
		PemKeys: outputs["pemKeys"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getAuthBackendConfig.
type GetAuthBackendConfigArgs struct {
	// The unique name for the Kubernetes backend the config to
	// retrieve Role attributes for resides in. Defaults to "kubernetes".
	Backend interface{}
	KubernetesCaCert interface{}
	KubernetesHost interface{}
	PemKeys interface{}
}

// A collection of values returned by getAuthBackendConfig.
type GetAuthBackendConfigResult struct {
	Backend interface{}
	// PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API.
	KubernetesCaCert interface{}
	// Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.
	KubernetesHost interface{}
	// Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.
	PemKeys interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
