// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOidcOpenidConfigResult {
    /**
     * @return The Authorization Endpoint for the provider.
     * 
     */
    private final String authorizationEndpoint;
    /**
     * @return The grant types supported by the provider.
     * 
     */
    private final List<String> grantTypesSupporteds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The signing algorithms supported by
     * the provider.
     * 
     */
    private final List<String> idTokenSigningAlgValuesSupporteds;
    /**
     * @return The URL of the issuer for the provider.
     * 
     */
    private final String issuer;
    /**
     * @return The well known keys URI for the provider.
     * 
     */
    private final String jwksUri;
    private final String name;
    /**
     * @return Specifies whether Request URI Parameter is
     * supported by the provider.
     * 
     */
    private final Boolean requestUriParameterSupported;
    /**
     * @return The response types supported by the provider.
     * 
     */
    private final List<String> responseTypesSupporteds;
    /**
     * @return The scopes supported by the provider.
     * 
     */
    private final List<String> scopesSupporteds;
    /**
     * @return The subject types supported by the provider.
     * 
     */
    private final List<String> subjectTypesSupporteds;
    /**
     * @return The Token Endpoint for the provider.
     * 
     */
    private final String tokenEndpoint;
    /**
     * @return The token endpoint auth methods supported by the provider.
     * 
     */
    private final List<String> tokenEndpointAuthMethodsSupporteds;
    /**
     * @return The User Info Endpoint for the provider
     * 
     */
    private final String userinfoEndpoint;

    @CustomType.Constructor
    private GetOidcOpenidConfigResult(
        @CustomType.Parameter("authorizationEndpoint") String authorizationEndpoint,
        @CustomType.Parameter("grantTypesSupporteds") List<String> grantTypesSupporteds,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("idTokenSigningAlgValuesSupporteds") List<String> idTokenSigningAlgValuesSupporteds,
        @CustomType.Parameter("issuer") String issuer,
        @CustomType.Parameter("jwksUri") String jwksUri,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("requestUriParameterSupported") Boolean requestUriParameterSupported,
        @CustomType.Parameter("responseTypesSupporteds") List<String> responseTypesSupporteds,
        @CustomType.Parameter("scopesSupporteds") List<String> scopesSupporteds,
        @CustomType.Parameter("subjectTypesSupporteds") List<String> subjectTypesSupporteds,
        @CustomType.Parameter("tokenEndpoint") String tokenEndpoint,
        @CustomType.Parameter("tokenEndpointAuthMethodsSupporteds") List<String> tokenEndpointAuthMethodsSupporteds,
        @CustomType.Parameter("userinfoEndpoint") String userinfoEndpoint) {
        this.authorizationEndpoint = authorizationEndpoint;
        this.grantTypesSupporteds = grantTypesSupporteds;
        this.id = id;
        this.idTokenSigningAlgValuesSupporteds = idTokenSigningAlgValuesSupporteds;
        this.issuer = issuer;
        this.jwksUri = jwksUri;
        this.name = name;
        this.requestUriParameterSupported = requestUriParameterSupported;
        this.responseTypesSupporteds = responseTypesSupporteds;
        this.scopesSupporteds = scopesSupporteds;
        this.subjectTypesSupporteds = subjectTypesSupporteds;
        this.tokenEndpoint = tokenEndpoint;
        this.tokenEndpointAuthMethodsSupporteds = tokenEndpointAuthMethodsSupporteds;
        this.userinfoEndpoint = userinfoEndpoint;
    }

    /**
     * @return The Authorization Endpoint for the provider.
     * 
     */
    public String authorizationEndpoint() {
        return this.authorizationEndpoint;
    }
    /**
     * @return The grant types supported by the provider.
     * 
     */
    public List<String> grantTypesSupporteds() {
        return this.grantTypesSupporteds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The signing algorithms supported by
     * the provider.
     * 
     */
    public List<String> idTokenSigningAlgValuesSupporteds() {
        return this.idTokenSigningAlgValuesSupporteds;
    }
    /**
     * @return The URL of the issuer for the provider.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return The well known keys URI for the provider.
     * 
     */
    public String jwksUri() {
        return this.jwksUri;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies whether Request URI Parameter is
     * supported by the provider.
     * 
     */
    public Boolean requestUriParameterSupported() {
        return this.requestUriParameterSupported;
    }
    /**
     * @return The response types supported by the provider.
     * 
     */
    public List<String> responseTypesSupporteds() {
        return this.responseTypesSupporteds;
    }
    /**
     * @return The scopes supported by the provider.
     * 
     */
    public List<String> scopesSupporteds() {
        return this.scopesSupporteds;
    }
    /**
     * @return The subject types supported by the provider.
     * 
     */
    public List<String> subjectTypesSupporteds() {
        return this.subjectTypesSupporteds;
    }
    /**
     * @return The Token Endpoint for the provider.
     * 
     */
    public String tokenEndpoint() {
        return this.tokenEndpoint;
    }
    /**
     * @return The token endpoint auth methods supported by the provider.
     * 
     */
    public List<String> tokenEndpointAuthMethodsSupporteds() {
        return this.tokenEndpointAuthMethodsSupporteds;
    }
    /**
     * @return The User Info Endpoint for the provider
     * 
     */
    public String userinfoEndpoint() {
        return this.userinfoEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOidcOpenidConfigResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authorizationEndpoint;
        private List<String> grantTypesSupporteds;
        private String id;
        private List<String> idTokenSigningAlgValuesSupporteds;
        private String issuer;
        private String jwksUri;
        private String name;
        private Boolean requestUriParameterSupported;
        private List<String> responseTypesSupporteds;
        private List<String> scopesSupporteds;
        private List<String> subjectTypesSupporteds;
        private String tokenEndpoint;
        private List<String> tokenEndpointAuthMethodsSupporteds;
        private String userinfoEndpoint;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOidcOpenidConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationEndpoint = defaults.authorizationEndpoint;
    	      this.grantTypesSupporteds = defaults.grantTypesSupporteds;
    	      this.id = defaults.id;
    	      this.idTokenSigningAlgValuesSupporteds = defaults.idTokenSigningAlgValuesSupporteds;
    	      this.issuer = defaults.issuer;
    	      this.jwksUri = defaults.jwksUri;
    	      this.name = defaults.name;
    	      this.requestUriParameterSupported = defaults.requestUriParameterSupported;
    	      this.responseTypesSupporteds = defaults.responseTypesSupporteds;
    	      this.scopesSupporteds = defaults.scopesSupporteds;
    	      this.subjectTypesSupporteds = defaults.subjectTypesSupporteds;
    	      this.tokenEndpoint = defaults.tokenEndpoint;
    	      this.tokenEndpointAuthMethodsSupporteds = defaults.tokenEndpointAuthMethodsSupporteds;
    	      this.userinfoEndpoint = defaults.userinfoEndpoint;
        }

        public Builder authorizationEndpoint(String authorizationEndpoint) {
            this.authorizationEndpoint = Objects.requireNonNull(authorizationEndpoint);
            return this;
        }
        public Builder grantTypesSupporteds(List<String> grantTypesSupporteds) {
            this.grantTypesSupporteds = Objects.requireNonNull(grantTypesSupporteds);
            return this;
        }
        public Builder grantTypesSupporteds(String... grantTypesSupporteds) {
            return grantTypesSupporteds(List.of(grantTypesSupporteds));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder idTokenSigningAlgValuesSupporteds(List<String> idTokenSigningAlgValuesSupporteds) {
            this.idTokenSigningAlgValuesSupporteds = Objects.requireNonNull(idTokenSigningAlgValuesSupporteds);
            return this;
        }
        public Builder idTokenSigningAlgValuesSupporteds(String... idTokenSigningAlgValuesSupporteds) {
            return idTokenSigningAlgValuesSupporteds(List.of(idTokenSigningAlgValuesSupporteds));
        }
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        public Builder jwksUri(String jwksUri) {
            this.jwksUri = Objects.requireNonNull(jwksUri);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder requestUriParameterSupported(Boolean requestUriParameterSupported) {
            this.requestUriParameterSupported = Objects.requireNonNull(requestUriParameterSupported);
            return this;
        }
        public Builder responseTypesSupporteds(List<String> responseTypesSupporteds) {
            this.responseTypesSupporteds = Objects.requireNonNull(responseTypesSupporteds);
            return this;
        }
        public Builder responseTypesSupporteds(String... responseTypesSupporteds) {
            return responseTypesSupporteds(List.of(responseTypesSupporteds));
        }
        public Builder scopesSupporteds(List<String> scopesSupporteds) {
            this.scopesSupporteds = Objects.requireNonNull(scopesSupporteds);
            return this;
        }
        public Builder scopesSupporteds(String... scopesSupporteds) {
            return scopesSupporteds(List.of(scopesSupporteds));
        }
        public Builder subjectTypesSupporteds(List<String> subjectTypesSupporteds) {
            this.subjectTypesSupporteds = Objects.requireNonNull(subjectTypesSupporteds);
            return this;
        }
        public Builder subjectTypesSupporteds(String... subjectTypesSupporteds) {
            return subjectTypesSupporteds(List.of(subjectTypesSupporteds));
        }
        public Builder tokenEndpoint(String tokenEndpoint) {
            this.tokenEndpoint = Objects.requireNonNull(tokenEndpoint);
            return this;
        }
        public Builder tokenEndpointAuthMethodsSupporteds(List<String> tokenEndpointAuthMethodsSupporteds) {
            this.tokenEndpointAuthMethodsSupporteds = Objects.requireNonNull(tokenEndpointAuthMethodsSupporteds);
            return this;
        }
        public Builder tokenEndpointAuthMethodsSupporteds(String... tokenEndpointAuthMethodsSupporteds) {
            return tokenEndpointAuthMethodsSupporteds(List.of(tokenEndpointAuthMethodsSupporteds));
        }
        public Builder userinfoEndpoint(String userinfoEndpoint) {
            this.userinfoEndpoint = Objects.requireNonNull(userinfoEndpoint);
            return this;
        }        public GetOidcOpenidConfigResult build() {
            return new GetOidcOpenidConfigResult(authorizationEndpoint, grantTypesSupporteds, id, idTokenSigningAlgValuesSupporteds, issuer, jwksUri, name, requestUriParameterSupported, responseTypesSupporteds, scopesSupporteds, subjectTypesSupporteds, tokenEndpoint, tokenEndpointAuthMethodsSupporteds, userinfoEndpoint);
        }
    }
}
