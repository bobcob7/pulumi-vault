// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.ad.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccessCredentialsResult {
    private final String backend;
    /**
     * @return The current set password on the Active Directory service account.
     * 
     */
    private final String currentPassword;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The current set password on the Active Directory service account, provided because AD is eventually consistent.
     * 
     */
    private final String lastPassword;
    private final String role;
    /**
     * @return The Active Directory service account username.
     * 
     */
    private final String username;

    @CustomType.Constructor
    private GetAccessCredentialsResult(
        @CustomType.Parameter("backend") String backend,
        @CustomType.Parameter("currentPassword") String currentPassword,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastPassword") String lastPassword,
        @CustomType.Parameter("role") String role,
        @CustomType.Parameter("username") String username) {
        this.backend = backend;
        this.currentPassword = currentPassword;
        this.id = id;
        this.lastPassword = lastPassword;
        this.role = role;
        this.username = username;
    }

    public String backend() {
        return this.backend;
    }
    /**
     * @return The current set password on the Active Directory service account.
     * 
     */
    public String currentPassword() {
        return this.currentPassword;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current set password on the Active Directory service account, provided because AD is eventually consistent.
     * 
     */
    public String lastPassword() {
        return this.lastPassword;
    }
    public String role() {
        return this.role;
    }
    /**
     * @return The Active Directory service account username.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessCredentialsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String backend;
        private String currentPassword;
        private String id;
        private String lastPassword;
        private String role;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAccessCredentialsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backend = defaults.backend;
    	      this.currentPassword = defaults.currentPassword;
    	      this.id = defaults.id;
    	      this.lastPassword = defaults.lastPassword;
    	      this.role = defaults.role;
    	      this.username = defaults.username;
        }

        public Builder backend(String backend) {
            this.backend = Objects.requireNonNull(backend);
            return this;
        }
        public Builder currentPassword(String currentPassword) {
            this.currentPassword = Objects.requireNonNull(currentPassword);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastPassword(String lastPassword) {
            this.lastPassword = Objects.requireNonNull(lastPassword);
            return this;
        }
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetAccessCredentialsResult build() {
            return new GetAccessCredentialsResult(backend, currentPassword, id, lastPassword, role, username);
        }
    }
}
