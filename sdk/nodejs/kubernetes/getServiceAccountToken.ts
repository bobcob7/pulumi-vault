// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getServiceAccountToken(args: GetServiceAccountTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceAccountTokenResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vault:kubernetes/getServiceAccountToken:getServiceAccountToken", {
        "backend": args.backend,
        "clusterRoleBinding": args.clusterRoleBinding,
        "kubernetesNamespace": args.kubernetesNamespace,
        "namespace": args.namespace,
        "role": args.role,
        "ttl": args.ttl,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceAccountToken.
 */
export interface GetServiceAccountTokenArgs {
    backend: string;
    clusterRoleBinding?: boolean;
    kubernetesNamespace: string;
    namespace?: string;
    role: string;
    ttl?: string;
}

/**
 * A collection of values returned by getServiceAccountToken.
 */
export interface GetServiceAccountTokenResult {
    readonly backend: string;
    readonly clusterRoleBinding?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kubernetesNamespace: string;
    readonly leaseDuration: number;
    readonly leaseId: string;
    readonly leaseRenewable: boolean;
    readonly namespace?: string;
    readonly role: string;
    readonly serviceAccountName: string;
    readonly serviceAccountNamespace: string;
    readonly serviceAccountToken: string;
    readonly ttl?: string;
}

export function getServiceAccountTokenOutput(args: GetServiceAccountTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceAccountTokenResult> {
    return pulumi.output(args).apply(a => getServiceAccountToken(a, opts))
}

/**
 * A collection of arguments for invoking getServiceAccountToken.
 */
export interface GetServiceAccountTokenOutputArgs {
    backend: pulumi.Input<string>;
    clusterRoleBinding?: pulumi.Input<boolean>;
    kubernetesNamespace: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    role: pulumi.Input<string>;
    ttl?: pulumi.Input<string>;
}
