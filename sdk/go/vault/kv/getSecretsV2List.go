// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kv

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault"
//	"github.com/pulumi/pulumi-vault/sdk/v5/go/vault/kv"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			kvv2, err := vault.NewMount(ctx, "kvv2", &vault.MountArgs{
//				Path: pulumi.String("kvv2"),
//				Type: pulumi.String("kv"),
//				Options: pulumi.AnyMap{
//					"version": pulumi.Any("2"),
//				},
//				Description: pulumi.String("KV Version 2 secret engine mount"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"zip": "zap",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = kv.NewSecretV2(ctx, "awsSecret", &kv.SecretV2Args{
//				Mount:    kvv2.Path,
//				DataJson: pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"foo": "bar",
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			_, err = kv.NewSecretV2(ctx, "azureSecret", &kv.SecretV2Args{
//				Mount:    kvv2.Path,
//				DataJson: pulumi.String(json1),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON2, err := json.Marshal(map[string]interface{}{
//				"password": "test",
//			})
//			if err != nil {
//				return err
//			}
//			json2 := string(tmpJSON2)
//			_, err = kv.NewSecretV2(ctx, "nestedSecret", &kv.SecretV2Args{
//				Mount:    kvv2.Path,
//				DataJson: pulumi.String(json2),
//			})
//			if err != nil {
//				return err
//			}
//			_ = kv.GetSecretsV2ListOutput(ctx, kv.GetSecretsV2ListOutputArgs{
//				Mount: kvv2.Path,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
// ## Required Vault Capabilities
//
// Use of this resource requires the `read` capability on the given path.
func GetSecretsV2List(ctx *pulumi.Context, args *GetSecretsV2ListArgs, opts ...pulumi.InvokeOption) (*GetSecretsV2ListResult, error) {
	var rv GetSecretsV2ListResult
	err := ctx.Invoke("vault:kv/getSecretsV2List:getSecretsV2List", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretsV2List.
type GetSecretsV2ListArgs struct {
	// Path where KV-V2 engine is mounted.
	Mount string `pulumi:"mount"`
	// Full name of the secret. For a nested secret
	// the name is the nested path excluding the mount and data
	// prefix. For example, for a secret at `kvv2/data/foo/bar/baz`
	// the name is `foo/bar/baz`.
	Name *string `pulumi:"name"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace *string `pulumi:"namespace"`
}

// A collection of values returned by getSecretsV2List.
type GetSecretsV2ListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id    string  `pulumi:"id"`
	Mount string  `pulumi:"mount"`
	Name  *string `pulumi:"name"`
	// List of all secret names listed under the given path.
	Names     []string `pulumi:"names"`
	Namespace *string  `pulumi:"namespace"`
	// Full path where the KV-V2 secrets are listed.
	Path string `pulumi:"path"`
}

func GetSecretsV2ListOutput(ctx *pulumi.Context, args GetSecretsV2ListOutputArgs, opts ...pulumi.InvokeOption) GetSecretsV2ListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretsV2ListResult, error) {
			args := v.(GetSecretsV2ListArgs)
			r, err := GetSecretsV2List(ctx, &args, opts...)
			var s GetSecretsV2ListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretsV2ListResultOutput)
}

// A collection of arguments for invoking getSecretsV2List.
type GetSecretsV2ListOutputArgs struct {
	// Path where KV-V2 engine is mounted.
	Mount pulumi.StringInput `pulumi:"mount"`
	// Full name of the secret. For a nested secret
	// the name is the nested path excluding the mount and data
	// prefix. For example, for a secret at `kvv2/data/foo/bar/baz`
	// the name is `foo/bar/baz`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace of the target resource.
	// The value should not contain leading or trailing forward slashes.
	// The `namespace` is always relative to the provider's configured [namespace](https://www.terraform.io/docs/providers/vault#namespace).
	// *Available only for Vault Enterprise*.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GetSecretsV2ListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsV2ListArgs)(nil)).Elem()
}

// A collection of values returned by getSecretsV2List.
type GetSecretsV2ListResultOutput struct{ *pulumi.OutputState }

func (GetSecretsV2ListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsV2ListResult)(nil)).Elem()
}

func (o GetSecretsV2ListResultOutput) ToGetSecretsV2ListResultOutput() GetSecretsV2ListResultOutput {
	return o
}

func (o GetSecretsV2ListResultOutput) ToGetSecretsV2ListResultOutputWithContext(ctx context.Context) GetSecretsV2ListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecretsV2ListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsV2ListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecretsV2ListResultOutput) Mount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsV2ListResult) string { return v.Mount }).(pulumi.StringOutput)
}

func (o GetSecretsV2ListResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretsV2ListResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all secret names listed under the given path.
func (o GetSecretsV2ListResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretsV2ListResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSecretsV2ListResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretsV2ListResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Full path where the KV-V2 secrets are listed.
func (o GetSecretsV2ListResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsV2ListResult) string { return v.Path }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretsV2ListResultOutput{})
}
