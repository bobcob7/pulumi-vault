// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.pkiSecret;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SecretBackendConfigCaArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretBackendConfigCaArgs Empty = new SecretBackendConfigCaArgs();

    /**
     * The PKI secret backend the resource belongs to.
     * 
     */
    @Import(name="backend", required=true)
    private Output<String> backend;

    /**
     * @return The PKI secret backend the resource belongs to.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }

    /**
     * The key and certificate PEM bundle
     * 
     */
    @Import(name="pemBundle", required=true)
    private Output<String> pemBundle;

    /**
     * @return The key and certificate PEM bundle
     * 
     */
    public Output<String> pemBundle() {
        return this.pemBundle;
    }

    private SecretBackendConfigCaArgs() {}

    private SecretBackendConfigCaArgs(SecretBackendConfigCaArgs $) {
        this.backend = $.backend;
        this.pemBundle = $.pemBundle;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretBackendConfigCaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretBackendConfigCaArgs $;

        public Builder() {
            $ = new SecretBackendConfigCaArgs();
        }

        public Builder(SecretBackendConfigCaArgs defaults) {
            $ = new SecretBackendConfigCaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backend The PKI secret backend the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder backend(Output<String> backend) {
            $.backend = backend;
            return this;
        }

        /**
         * @param backend The PKI secret backend the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        /**
         * @param pemBundle The key and certificate PEM bundle
         * 
         * @return builder
         * 
         */
        public Builder pemBundle(Output<String> pemBundle) {
            $.pemBundle = pemBundle;
            return this;
        }

        /**
         * @param pemBundle The key and certificate PEM bundle
         * 
         * @return builder
         * 
         */
        public Builder pemBundle(String pemBundle) {
            return pemBundle(Output.of(pemBundle));
        }

        public SecretBackendConfigCaArgs build() {
            $.backend = Objects.requireNonNull($.backend, "expected parameter 'backend' to be non-null");
            $.pemBundle = Objects.requireNonNull($.pemBundle, "expected parameter 'pemBundle' to be non-null");
            return $;
        }
    }

}
