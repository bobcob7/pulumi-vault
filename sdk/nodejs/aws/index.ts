// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./authBackendCert";
export * from "./authBackendClient";
export * from "./authBackendIdentityWhitelist";
export * from "./authBackendLogin";
export * from "./authBackendRole";
export * from "./authBackendRoleTag";
export * from "./authBackendRoletagBlacklist";
export * from "./authBackendStsRole";
export * from "./getAccessCredentials";
export * from "./secretBackend";
export * from "./secretBackendRole";

// Import resources to register:
import { AuthBackendCert } from "./authBackendCert";
import { AuthBackendClient } from "./authBackendClient";
import { AuthBackendIdentityWhitelist } from "./authBackendIdentityWhitelist";
import { AuthBackendLogin } from "./authBackendLogin";
import { AuthBackendRole } from "./authBackendRole";
import { AuthBackendRoleTag } from "./authBackendRoleTag";
import { AuthBackendRoletagBlacklist } from "./authBackendRoletagBlacklist";
import { AuthBackendStsRole } from "./authBackendStsRole";
import { SecretBackend } from "./secretBackend";
import { SecretBackendRole } from "./secretBackendRole";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "vault:aws/authBackendCert:AuthBackendCert":
                return new AuthBackendCert(name, <any>undefined, { urn })
            case "vault:aws/authBackendClient:AuthBackendClient":
                return new AuthBackendClient(name, <any>undefined, { urn })
            case "vault:aws/authBackendIdentityWhitelist:AuthBackendIdentityWhitelist":
                return new AuthBackendIdentityWhitelist(name, <any>undefined, { urn })
            case "vault:aws/authBackendLogin:AuthBackendLogin":
                return new AuthBackendLogin(name, <any>undefined, { urn })
            case "vault:aws/authBackendRole:AuthBackendRole":
                return new AuthBackendRole(name, <any>undefined, { urn })
            case "vault:aws/authBackendRoleTag:AuthBackendRoleTag":
                return new AuthBackendRoleTag(name, <any>undefined, { urn })
            case "vault:aws/authBackendRoletagBlacklist:AuthBackendRoletagBlacklist":
                return new AuthBackendRoletagBlacklist(name, <any>undefined, { urn })
            case "vault:aws/authBackendStsRole:AuthBackendStsRole":
                return new AuthBackendStsRole(name, <any>undefined, { urn })
            case "vault:aws/secretBackend:SecretBackend":
                return new SecretBackend(name, <any>undefined, { urn })
            case "vault:aws/secretBackendRole:SecretBackendRole":
                return new SecretBackendRole(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("vault", "aws/authBackendCert", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendClient", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendIdentityWhitelist", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendLogin", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendRole", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendRoleTag", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendRoletagBlacklist", _module)
pulumi.runtime.registerResourceModule("vault", "aws/authBackendStsRole", _module)
pulumi.runtime.registerResourceModule("vault", "aws/secretBackend", _module)
pulumi.runtime.registerResourceModule("vault", "aws/secretBackendRole", _module)
