// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package identity

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OidcKeyAllowedClientID struct {
	pulumi.CustomResourceState

	// Client ID to allow usage with the OIDC named key
	AllowedClientId pulumi.StringOutput `pulumi:"allowedClientId"`
	// Name of the OIDC Key allow the Client ID.
	KeyName pulumi.StringOutput `pulumi:"keyName"`
}

// NewOidcKeyAllowedClientID registers a new resource with the given unique name, arguments, and options.
func NewOidcKeyAllowedClientID(ctx *pulumi.Context,
	name string, args *OidcKeyAllowedClientIDArgs, opts ...pulumi.ResourceOption) (*OidcKeyAllowedClientID, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowedClientId == nil {
		return nil, errors.New("invalid value for required argument 'AllowedClientId'")
	}
	if args.KeyName == nil {
		return nil, errors.New("invalid value for required argument 'KeyName'")
	}
	var resource OidcKeyAllowedClientID
	err := ctx.RegisterResource("vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOidcKeyAllowedClientID gets an existing OidcKeyAllowedClientID resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOidcKeyAllowedClientID(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OidcKeyAllowedClientIDState, opts ...pulumi.ResourceOption) (*OidcKeyAllowedClientID, error) {
	var resource OidcKeyAllowedClientID
	err := ctx.ReadResource("vault:identity/oidcKeyAllowedClientID:OidcKeyAllowedClientID", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OidcKeyAllowedClientID resources.
type oidcKeyAllowedClientIDState struct {
	// Client ID to allow usage with the OIDC named key
	AllowedClientId *string `pulumi:"allowedClientId"`
	// Name of the OIDC Key allow the Client ID.
	KeyName *string `pulumi:"keyName"`
}

type OidcKeyAllowedClientIDState struct {
	// Client ID to allow usage with the OIDC named key
	AllowedClientId pulumi.StringPtrInput
	// Name of the OIDC Key allow the Client ID.
	KeyName pulumi.StringPtrInput
}

func (OidcKeyAllowedClientIDState) ElementType() reflect.Type {
	return reflect.TypeOf((*oidcKeyAllowedClientIDState)(nil)).Elem()
}

type oidcKeyAllowedClientIDArgs struct {
	// Client ID to allow usage with the OIDC named key
	AllowedClientId string `pulumi:"allowedClientId"`
	// Name of the OIDC Key allow the Client ID.
	KeyName string `pulumi:"keyName"`
}

// The set of arguments for constructing a OidcKeyAllowedClientID resource.
type OidcKeyAllowedClientIDArgs struct {
	// Client ID to allow usage with the OIDC named key
	AllowedClientId pulumi.StringInput
	// Name of the OIDC Key allow the Client ID.
	KeyName pulumi.StringInput
}

func (OidcKeyAllowedClientIDArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oidcKeyAllowedClientIDArgs)(nil)).Elem()
}

type OidcKeyAllowedClientIDInput interface {
	pulumi.Input

	ToOidcKeyAllowedClientIDOutput() OidcKeyAllowedClientIDOutput
	ToOidcKeyAllowedClientIDOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDOutput
}

func (*OidcKeyAllowedClientID) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcKeyAllowedClientID)(nil))
}

func (i *OidcKeyAllowedClientID) ToOidcKeyAllowedClientIDOutput() OidcKeyAllowedClientIDOutput {
	return i.ToOidcKeyAllowedClientIDOutputWithContext(context.Background())
}

func (i *OidcKeyAllowedClientID) ToOidcKeyAllowedClientIDOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcKeyAllowedClientIDOutput)
}

func (i *OidcKeyAllowedClientID) ToOidcKeyAllowedClientIDPtrOutput() OidcKeyAllowedClientIDPtrOutput {
	return i.ToOidcKeyAllowedClientIDPtrOutputWithContext(context.Background())
}

func (i *OidcKeyAllowedClientID) ToOidcKeyAllowedClientIDPtrOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcKeyAllowedClientIDPtrOutput)
}

type OidcKeyAllowedClientIDPtrInput interface {
	pulumi.Input

	ToOidcKeyAllowedClientIDPtrOutput() OidcKeyAllowedClientIDPtrOutput
	ToOidcKeyAllowedClientIDPtrOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDPtrOutput
}

type oidcKeyAllowedClientIDPtrType OidcKeyAllowedClientIDArgs

func (*oidcKeyAllowedClientIDPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OidcKeyAllowedClientID)(nil))
}

func (i *oidcKeyAllowedClientIDPtrType) ToOidcKeyAllowedClientIDPtrOutput() OidcKeyAllowedClientIDPtrOutput {
	return i.ToOidcKeyAllowedClientIDPtrOutputWithContext(context.Background())
}

func (i *oidcKeyAllowedClientIDPtrType) ToOidcKeyAllowedClientIDPtrOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcKeyAllowedClientIDPtrOutput)
}

// OidcKeyAllowedClientIDArrayInput is an input type that accepts OidcKeyAllowedClientIDArray and OidcKeyAllowedClientIDArrayOutput values.
// You can construct a concrete instance of `OidcKeyAllowedClientIDArrayInput` via:
//
//          OidcKeyAllowedClientIDArray{ OidcKeyAllowedClientIDArgs{...} }
type OidcKeyAllowedClientIDArrayInput interface {
	pulumi.Input

	ToOidcKeyAllowedClientIDArrayOutput() OidcKeyAllowedClientIDArrayOutput
	ToOidcKeyAllowedClientIDArrayOutputWithContext(context.Context) OidcKeyAllowedClientIDArrayOutput
}

type OidcKeyAllowedClientIDArray []OidcKeyAllowedClientIDInput

func (OidcKeyAllowedClientIDArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OidcKeyAllowedClientID)(nil)).Elem()
}

func (i OidcKeyAllowedClientIDArray) ToOidcKeyAllowedClientIDArrayOutput() OidcKeyAllowedClientIDArrayOutput {
	return i.ToOidcKeyAllowedClientIDArrayOutputWithContext(context.Background())
}

func (i OidcKeyAllowedClientIDArray) ToOidcKeyAllowedClientIDArrayOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcKeyAllowedClientIDArrayOutput)
}

// OidcKeyAllowedClientIDMapInput is an input type that accepts OidcKeyAllowedClientIDMap and OidcKeyAllowedClientIDMapOutput values.
// You can construct a concrete instance of `OidcKeyAllowedClientIDMapInput` via:
//
//          OidcKeyAllowedClientIDMap{ "key": OidcKeyAllowedClientIDArgs{...} }
type OidcKeyAllowedClientIDMapInput interface {
	pulumi.Input

	ToOidcKeyAllowedClientIDMapOutput() OidcKeyAllowedClientIDMapOutput
	ToOidcKeyAllowedClientIDMapOutputWithContext(context.Context) OidcKeyAllowedClientIDMapOutput
}

type OidcKeyAllowedClientIDMap map[string]OidcKeyAllowedClientIDInput

func (OidcKeyAllowedClientIDMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OidcKeyAllowedClientID)(nil)).Elem()
}

func (i OidcKeyAllowedClientIDMap) ToOidcKeyAllowedClientIDMapOutput() OidcKeyAllowedClientIDMapOutput {
	return i.ToOidcKeyAllowedClientIDMapOutputWithContext(context.Background())
}

func (i OidcKeyAllowedClientIDMap) ToOidcKeyAllowedClientIDMapOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OidcKeyAllowedClientIDMapOutput)
}

type OidcKeyAllowedClientIDOutput struct{ *pulumi.OutputState }

func (OidcKeyAllowedClientIDOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OidcKeyAllowedClientID)(nil))
}

func (o OidcKeyAllowedClientIDOutput) ToOidcKeyAllowedClientIDOutput() OidcKeyAllowedClientIDOutput {
	return o
}

func (o OidcKeyAllowedClientIDOutput) ToOidcKeyAllowedClientIDOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDOutput {
	return o
}

func (o OidcKeyAllowedClientIDOutput) ToOidcKeyAllowedClientIDPtrOutput() OidcKeyAllowedClientIDPtrOutput {
	return o.ToOidcKeyAllowedClientIDPtrOutputWithContext(context.Background())
}

func (o OidcKeyAllowedClientIDOutput) ToOidcKeyAllowedClientIDPtrOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OidcKeyAllowedClientID) *OidcKeyAllowedClientID {
		return &v
	}).(OidcKeyAllowedClientIDPtrOutput)
}

type OidcKeyAllowedClientIDPtrOutput struct{ *pulumi.OutputState }

func (OidcKeyAllowedClientIDPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OidcKeyAllowedClientID)(nil))
}

func (o OidcKeyAllowedClientIDPtrOutput) ToOidcKeyAllowedClientIDPtrOutput() OidcKeyAllowedClientIDPtrOutput {
	return o
}

func (o OidcKeyAllowedClientIDPtrOutput) ToOidcKeyAllowedClientIDPtrOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDPtrOutput {
	return o
}

func (o OidcKeyAllowedClientIDPtrOutput) Elem() OidcKeyAllowedClientIDOutput {
	return o.ApplyT(func(v *OidcKeyAllowedClientID) OidcKeyAllowedClientID {
		if v != nil {
			return *v
		}
		var ret OidcKeyAllowedClientID
		return ret
	}).(OidcKeyAllowedClientIDOutput)
}

type OidcKeyAllowedClientIDArrayOutput struct{ *pulumi.OutputState }

func (OidcKeyAllowedClientIDArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OidcKeyAllowedClientID)(nil))
}

func (o OidcKeyAllowedClientIDArrayOutput) ToOidcKeyAllowedClientIDArrayOutput() OidcKeyAllowedClientIDArrayOutput {
	return o
}

func (o OidcKeyAllowedClientIDArrayOutput) ToOidcKeyAllowedClientIDArrayOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDArrayOutput {
	return o
}

func (o OidcKeyAllowedClientIDArrayOutput) Index(i pulumi.IntInput) OidcKeyAllowedClientIDOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OidcKeyAllowedClientID {
		return vs[0].([]OidcKeyAllowedClientID)[vs[1].(int)]
	}).(OidcKeyAllowedClientIDOutput)
}

type OidcKeyAllowedClientIDMapOutput struct{ *pulumi.OutputState }

func (OidcKeyAllowedClientIDMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OidcKeyAllowedClientID)(nil))
}

func (o OidcKeyAllowedClientIDMapOutput) ToOidcKeyAllowedClientIDMapOutput() OidcKeyAllowedClientIDMapOutput {
	return o
}

func (o OidcKeyAllowedClientIDMapOutput) ToOidcKeyAllowedClientIDMapOutputWithContext(ctx context.Context) OidcKeyAllowedClientIDMapOutput {
	return o
}

func (o OidcKeyAllowedClientIDMapOutput) MapIndex(k pulumi.StringInput) OidcKeyAllowedClientIDOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OidcKeyAllowedClientID {
		return vs[0].(map[string]OidcKeyAllowedClientID)[vs[1].(string)]
	}).(OidcKeyAllowedClientIDOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OidcKeyAllowedClientIDInput)(nil)).Elem(), &OidcKeyAllowedClientID{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcKeyAllowedClientIDPtrInput)(nil)).Elem(), &OidcKeyAllowedClientID{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcKeyAllowedClientIDArrayInput)(nil)).Elem(), OidcKeyAllowedClientIDArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OidcKeyAllowedClientIDMapInput)(nil)).Elem(), OidcKeyAllowedClientIDMap{})
	pulumi.RegisterOutputType(OidcKeyAllowedClientIDOutput{})
	pulumi.RegisterOutputType(OidcKeyAllowedClientIDPtrOutput{})
	pulumi.RegisterOutputType(OidcKeyAllowedClientIDArrayOutput{})
	pulumi.RegisterOutputType(OidcKeyAllowedClientIDMapOutput{})
}
