// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.kubernetes.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceAccountTokenArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceAccountTokenArgs Empty = new GetServiceAccountTokenArgs();

    @Import(name="backend", required=true)
    private Output<String> backend;

    public Output<String> backend() {
        return this.backend;
    }

    @Import(name="clusterRoleBinding")
    private @Nullable Output<Boolean> clusterRoleBinding;

    public Optional<Output<Boolean>> clusterRoleBinding() {
        return Optional.ofNullable(this.clusterRoleBinding);
    }

    @Import(name="kubernetesNamespace", required=true)
    private Output<String> kubernetesNamespace;

    public Output<String> kubernetesNamespace() {
        return this.kubernetesNamespace;
    }

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="role", required=true)
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }

    @Import(name="ttl")
    private @Nullable Output<String> ttl;

    public Optional<Output<String>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private GetServiceAccountTokenArgs() {}

    private GetServiceAccountTokenArgs(GetServiceAccountTokenArgs $) {
        this.backend = $.backend;
        this.clusterRoleBinding = $.clusterRoleBinding;
        this.kubernetesNamespace = $.kubernetesNamespace;
        this.namespace = $.namespace;
        this.role = $.role;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceAccountTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceAccountTokenArgs $;

        public Builder() {
            $ = new GetServiceAccountTokenArgs();
        }

        public Builder(GetServiceAccountTokenArgs defaults) {
            $ = new GetServiceAccountTokenArgs(Objects.requireNonNull(defaults));
        }

        public Builder backend(Output<String> backend) {
            $.backend = backend;
            return this;
        }

        public Builder backend(String backend) {
            return backend(Output.of(backend));
        }

        public Builder clusterRoleBinding(@Nullable Output<Boolean> clusterRoleBinding) {
            $.clusterRoleBinding = clusterRoleBinding;
            return this;
        }

        public Builder clusterRoleBinding(Boolean clusterRoleBinding) {
            return clusterRoleBinding(Output.of(clusterRoleBinding));
        }

        public Builder kubernetesNamespace(Output<String> kubernetesNamespace) {
            $.kubernetesNamespace = kubernetesNamespace;
            return this;
        }

        public Builder kubernetesNamespace(String kubernetesNamespace) {
            return kubernetesNamespace(Output.of(kubernetesNamespace));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder ttl(@Nullable Output<String> ttl) {
            $.ttl = ttl;
            return this;
        }

        public Builder ttl(String ttl) {
            return ttl(Output.of(ttl));
        }

        public GetServiceAccountTokenArgs build() {
            $.backend = Objects.requireNonNull($.backend, "expected parameter 'backend' to be non-null");
            $.kubernetesNamespace = Objects.requireNonNull($.kubernetesNamespace, "expected parameter 'kubernetesNamespace' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            return $;
        }
    }

}
