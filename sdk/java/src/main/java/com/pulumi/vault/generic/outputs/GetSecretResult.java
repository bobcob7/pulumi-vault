// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vault.generic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecretResult {
    /**
     * @return A mapping whose keys are the top-level data keys returned from
     * Vault and whose values are the corresponding values. This map can only
     * represent string data, so any non-string values returned from Vault are
     * serialized as JSON.
     * 
     */
    private final Map<String,Object> data;
    /**
     * @return A string containing the full data payload retrieved from
     * Vault, serialized in JSON format.
     * 
     */
    private final String dataJson;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The duration of the secret lease, in seconds relative
     * to the time the data was requested. Once this time has passed any plan
     * generated with this data may fail to apply.
     * 
     */
    private final Integer leaseDuration;
    /**
     * @return The lease identifier assigned by Vault, if any.
     * 
     */
    private final String leaseId;
    private final Boolean leaseRenewable;
    private final String leaseStartTime;
    private final String path;
    private final @Nullable Integer version;
    private final @Nullable Boolean withLeaseStartTime;

    @CustomType.Constructor
    private GetSecretResult(
        @CustomType.Parameter("data") Map<String,Object> data,
        @CustomType.Parameter("dataJson") String dataJson,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("leaseDuration") Integer leaseDuration,
        @CustomType.Parameter("leaseId") String leaseId,
        @CustomType.Parameter("leaseRenewable") Boolean leaseRenewable,
        @CustomType.Parameter("leaseStartTime") String leaseStartTime,
        @CustomType.Parameter("path") String path,
        @CustomType.Parameter("version") @Nullable Integer version,
        @CustomType.Parameter("withLeaseStartTime") @Nullable Boolean withLeaseStartTime) {
        this.data = data;
        this.dataJson = dataJson;
        this.id = id;
        this.leaseDuration = leaseDuration;
        this.leaseId = leaseId;
        this.leaseRenewable = leaseRenewable;
        this.leaseStartTime = leaseStartTime;
        this.path = path;
        this.version = version;
        this.withLeaseStartTime = withLeaseStartTime;
    }

    /**
     * @return A mapping whose keys are the top-level data keys returned from
     * Vault and whose values are the corresponding values. This map can only
     * represent string data, so any non-string values returned from Vault are
     * serialized as JSON.
     * 
     */
    public Map<String,Object> data() {
        return this.data;
    }
    /**
     * @return A string containing the full data payload retrieved from
     * Vault, serialized in JSON format.
     * 
     */
    public String dataJson() {
        return this.dataJson;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The duration of the secret lease, in seconds relative
     * to the time the data was requested. Once this time has passed any plan
     * generated with this data may fail to apply.
     * 
     */
    public Integer leaseDuration() {
        return this.leaseDuration;
    }
    /**
     * @return The lease identifier assigned by Vault, if any.
     * 
     */
    public String leaseId() {
        return this.leaseId;
    }
    public Boolean leaseRenewable() {
        return this.leaseRenewable;
    }
    public String leaseStartTime() {
        return this.leaseStartTime;
    }
    public String path() {
        return this.path;
    }
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }
    public Optional<Boolean> withLeaseStartTime() {
        return Optional.ofNullable(this.withLeaseStartTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> data;
        private String dataJson;
        private String id;
        private Integer leaseDuration;
        private String leaseId;
        private Boolean leaseRenewable;
        private String leaseStartTime;
        private String path;
        private @Nullable Integer version;
        private @Nullable Boolean withLeaseStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSecretResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.dataJson = defaults.dataJson;
    	      this.id = defaults.id;
    	      this.leaseDuration = defaults.leaseDuration;
    	      this.leaseId = defaults.leaseId;
    	      this.leaseRenewable = defaults.leaseRenewable;
    	      this.leaseStartTime = defaults.leaseStartTime;
    	      this.path = defaults.path;
    	      this.version = defaults.version;
    	      this.withLeaseStartTime = defaults.withLeaseStartTime;
        }

        public Builder data(Map<String,Object> data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }
        public Builder dataJson(String dataJson) {
            this.dataJson = Objects.requireNonNull(dataJson);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder leaseDuration(Integer leaseDuration) {
            this.leaseDuration = Objects.requireNonNull(leaseDuration);
            return this;
        }
        public Builder leaseId(String leaseId) {
            this.leaseId = Objects.requireNonNull(leaseId);
            return this;
        }
        public Builder leaseRenewable(Boolean leaseRenewable) {
            this.leaseRenewable = Objects.requireNonNull(leaseRenewable);
            return this;
        }
        public Builder leaseStartTime(String leaseStartTime) {
            this.leaseStartTime = Objects.requireNonNull(leaseStartTime);
            return this;
        }
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder version(@Nullable Integer version) {
            this.version = version;
            return this;
        }
        public Builder withLeaseStartTime(@Nullable Boolean withLeaseStartTime) {
            this.withLeaseStartTime = withLeaseStartTime;
            return this;
        }        public GetSecretResult build() {
            return new GetSecretResult(data, dataJson, id, leaseDuration, leaseId, leaseRenewable, leaseStartTime, path, version, withLeaseStartTime);
        }
    }
}
